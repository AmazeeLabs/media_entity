<?php


/**
 * Implements hook_permission().
 */
function media_entity_permission() {
  $perms = array(
    'administer media' => array(
      'title' => t('Administer media'),
      'restrict access' => TRUE,
    ),
    'view media' => array(
      'title' => t('View media'),
    ),
    'update media' => array(
      'title' => t('Update media'),
    ),
    'delete media' => array(
      'title' => t('Delete media'),
    ),
    'create media' => array(
      'title' => t('Create media'),
    ),
  );

  return $perms;
}

/**
 * Implements hook_menu().
 */
function media_entity_menu() {
  $items['media/%media_entity'] = array(
    'title callback' => 'media_entity_page_title',
    'title arguments' => array(1),
    'route_name' => 'media.view',
  );
  return $items;
}

/**
 * Loads a media entity from the database.
 *
 * @param int $mid
 *   The media ID.
 * @param bool $reset
 *   (optional) Whether to reset the media_load_multiple() cache. Defaults to
 *   FALSE.
 *
 * @return \Drupal\media_entity\MediaInterface|null
 *   A fully-populated media entity, or NULL if the media is not found.
 */
function media_entity_load($nid = NULL, $reset = FALSE) {
  return entity_load('media', $nid, $reset);
}

/**
 * Title callback: Displays the media's title.
 *
 * @param \Drupal\Core\Entity\EntityInterface $media
 *   The media entity.
 *
 * @return
 *   An unsanitized string that is the name of the media.
 *
 * @see media_entity_menu()
 */
function media_entity_page_title(\Drupal\Core\Entity\EntityInterface $media) {
  return $media->label();
}

/**
 * Entity URI callback.
 *
 * @param \Drupal\Core\Entity\EntityInterface $media
 *   A media entity.
 *
 * @return array
 *   An array with 'path' as the key and the path to the media as its value.
 */
function media_entity_uri(\Drupal\Core\Entity\EntityInterface $media) {
  return array(
    'path' => 'media/' . $media->id(),
  );
}
